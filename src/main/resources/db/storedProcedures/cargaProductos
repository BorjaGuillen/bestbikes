-- --------------------------------------------------------------------------------
-- Routine DDL
-- Note: comments before and after the routine body will not be stored by the server
-- --------------------------------------------------------------------------------
DELIMITER $$

CREATE DEFINER=`root`@`localhost` PROCEDURE `cargaProductos`(IN incremento decimal(2,2), actuarPVP tinyint(1))
BEGIN

DECLARE V_number 					varchar(200) ;
DECLARE V_unitprice					decimal(20,6) ;
DECLARE V_scaledunitprice			decimal(20,6);
DECLARE V_recommendedretailprice	decimal(20,6);
DECLARE V_description1				varchar(200);
DECLARE V_description2				varchar(200);
DECLARE V_availablestatus			tinyint(1);
DECLARE V_availablestatusdesc		varchar(200);
DECLARE V_supplieritemnumber		varchar(200);
DECLARE V_tax						decimal(17,6);
DECLARE V_ean						varchar(13);
DECLARE V_manufacturerean			varchar(200);
DECLARE V_customstariffnumber		varchar(200);
DECLARE V_supplier					varchar(200);
DECLARE V_categorykey				varchar(200);
DECLARE V_infourl					varchar(200);
DECLARE V_pictureurl				varchar(200);

DECLARE finished INTEGER DEFAULT 0;
DECLARE aux_count INTEGER DEFAULT 0;
DECLARE v_id_categoria int(10) DEFAULT 0;

DECLARE ACargar CURSOR 
	FOR SELECT 
		number,
		unitprice,
		scaledunitprice,
		recommendedretailprice,
		description1,
		description2,
		availablestatus,
		availablestatusdesc,
		supplieritemnumber,
		tax,
		ean,
		manufacturerean,
		customstariffnumber,
		supplier,
		categorykey,
		infourl,
		pictureurl	
	from bestbike_bd.cargaProductos where cargado=1;


DECLARE CONTINUE HANDLER
 FOR NOT FOUND SET finished = 1;

/*		Tendremos que asociar los códigos de catergoria que nos aporta el servicio web productoNuevo.getCategorykey();
        a los códigos de los que disponemos en prestaShopen (ps_category ps_category_lang). Una vez asociados asignaremos 
        el id correspondiente al IdCategoryDefault, en caso de no encontrarlo no cargamos al producto dando un error de 
        no existe la categoría xxx del producto a cargar.
            
*/


OPEN ACargar;
 
 get_registro: LOOP
 
 FETCH ACargar INTO 
	V_number,
	V_unitprice,
	V_scaledunitprice,
	V_recommendedretailprice,
	V_description1,
	V_description2,
	V_availablestatus,
	V_availablestatusdesc,
	V_supplieritemnumber,
	V_tax,
	V_ean,
	V_manufacturerean,
	V_customstariffnumber,
	V_supplier,
	V_categorykey,
	V_infourl,
	V_pictureurl;



	 IF finished = 1 THEN 
		LEAVE get_registro;
	 END IF;

 -- Comprobamos si el producto es nuevo buscandolo en supplier_reference
	
	select count(*) from bestbike_bd.ps_product where id_product=V_number INTO aux_count;





	
 IF aux_count=0 then -- Si el elemento no existe insertamos

			/*Tendremos que asociar los códigos de catergoria que nos aporta el servicio web productoNuevo.getCategorykey();
             a los códigos de los que disponemos en prestaShopen (ps_category ps_category_lang). Una vez asociados asignaremos 
             el id correspondiente al IdCategoryDefault, en caso de no encontrarlo no cargamos al producto dando un error de 
             no existe la categoría xxx del producto a cargar.
            
            */
		select id_categoria from bestbike_bd.catPS_catSRV where categorykey=V_categorykey INTO v_id_categoria;
			/*
			Comprobamos si el producto esta disponible por el proveedor (valor 0), en caso de que este disponible ponemos el valor de
			V_availablestatusdesc a 1 tomará el valor 0 en caso contrario.
			*/
		IF V_availablestatusdesc=0	THEN	
			SET V_availablestatusdesc=1;
		ELSE SET V_availablestatusdesc=0;

		

		IF actuarPVP=1 THEN -- Actuamos sobre el valor de de recommendedretailprice tomando el valor =recommendedretailprice+(recommendedretailprice*incremento)/100
			
				SET V_recommendedretailprice=V_recommendedretailprice+(V_recommendedretailprice*incremento)/100;
		
		ELSE -- actuarPVP=0 Tenemos que insertar el elemento poniendo como valor de V_recommendedretailprice su valor unitprice+(unitprice*incremento)/100

				SET V_recommendedretailprice=V_unitprice+(V_unitprice*incremento)/100;

		END IF; -- actuarPVP=1

		INSERT INTO bestbike_bd.ps_product (

					id_supplier,
					id_manufacturer,
					id_category_default,
					id_shop_default,
					id_tax_rules_group,
					on_sale,
					online_only,
					ean13,
					upc,
					ecotax,
					quantity,
					minimal_quantity,
					price,
					wholesale_price,
					unity,
					unit_price_ratio,
					additional_shipping_cost,
					reference,
					supplier_reference,
					location,
					width,
					height,
					depth,
					weight,
					out_of_stock,
					quantity_discount,
					customizable,
					uploadable_files,
					text_fields,
					active,
					redirect_type,
					id_product_redirected,
					available_for_order,
					available_date,
					condition,
					show_price,
					indexed,
					visibility,
					cache_is_pack,
					cache_has_attachments,
					is_virtual,
					cache_default_attribute,
					date_add,
					date_upd,
					advanced_stock_management,
					pack_stock_type)

		VALUES (
					0, -- id_supplier
					id_manufacturer,
					v_id_categoria, -- id_category_default
					1, -- id_shop_default,
					1, -- id_tax_rules_group,
					1, -- on_sale,
					0, -- online_only,
					null, -- ean13,
					null, -- upc,
					0, -- ecotax,
					0, -- quantity,
					1, -- minimal_quantity,
					V_recommendedretailprice, -- price,
					0, -- wholesale_price,
					null, -- unity,
					0, -- unit_price_ratio,
					0, -- additional_shipping_cost,
					null, -- reference,
					V_number, -- supplier_reference,
					null, -- location,
					0, -- width,
					0, -- height,
					0, -- depth,
					0, -- weight,
					2, -- out_of_stock,
					0, -- quantity_discount,
					0, -- customizable,
					0, -- uploadable_files,
					0, -- text_fields,
					V_availablestatusdesc, -- active,
					'404', -- redirect_type,
					0, -- id_product_redirected,
					1, -- available_for_order,
					null, -- available_date,
					'new',-- condition,
					1, -- show_price,
					0, -- indexed,
					'both', -- visibility,
					0, -- cache_is_pack,
					0, -- cache_has_attachments,
					0, -- is_virtual,
					0, -- cache_default_attribute,
					now(),-- date_add
					null, -- date_upd
					0, -- advanced_stock_management,
					3, -- pack_stock_type
					);
		

	ELSE -- aux_count El elemento ya existia y vamos a actualizarlo





	END IF; -- aux_count
 END LOOP get_registro;

CLOSE ACargar;
END